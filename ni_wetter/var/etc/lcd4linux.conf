# --- Samsung SPF-Auto --------------------------------------------- #

Display Samsung800x600_user {
	driver		'SamsungSPF'
	model		'SPF-Auto'
	port		'usb0'
	font		'6x8'
	size		'800x600'
	basecolor	'dddddd'
	foreground	'ffffff'
	background	'00000000'
	orientation	1
}

Display Samsung800x480_user {
	driver		'SamsungSPF'
	model		'SPF-Auto'
	port		'usb0'
	font		'6x8'
	size		'800x480'
	basecolor	'dddddd'
	foreground	'ffffff'
	background	'00000000'
	orientation	1
}

Display Samsung1024x600_user {
	driver		'SamsungSPF'
	model		'SPF-Auto'
	port		'usb0'
	font		'6x8'
	size		'1024x600'
	basecolor	'dddddd'
	foreground	'ffffff'
	background	'00000000'
	orientation	1
}

# --- weather ----------------------------------------------------------- #

Widget ICON_WEATHER {
	class		'Image'
	file		file::exist(FWEATHER) == 0 ? '' : ICONS . 'mode/weather_on.png'
	update		10000
	reload		1
}

Widget ICON_WEATHER1 {
	class		'Image'
	file		file::exist(FWEATHER) == 0 ? ICONS . 'mode/weather_off.png' : ICONS . 'mode/weather_on.png'
	update		10000
	reload		1
	scale		270
}

Widget ICON_WEATHER2 {
	class		'Image'
	file		file::exist(FWEATHER) == 0 ? ICONS . 'mode/weather_off.png' : ICONS . 'mode/weather_on.png'
	update		10000
	reload		1
	scale		200
}

Widget S_WIND {
	class		'Image'
	file		file::exist(FWEATHER) == 0 ? '' :  (VAR0=file::readline(W . 'wind', 1); VAR1=substr(VAR0, strstr(VAR0, '|') + 1); VAR2=substr(VAR1, strstr(VAR1,'|') + 1); W_ICON . VAR2 . '.png')
	update		4000
	reload		1
	align		'L'
}

Widget S1_WIND {
	class		'Image'
	file		file::exist(FWEATHER) == 0 ? '' : (VAR1=file::readline(W . 'wind', 1); VAR2=substr(VAR1, strstr(VAR1, '|') + 1); W_ICON . (VAR2 < 22.5 ? 'N' : (VAR2 < 67.5 ? 'NO' : (VAR2 < 112.5 ? 'O' : (VAR2 < 157.5 ? 'SO' : (VAR2 < 202.5 ? 'S' : (VAR2 < 247.5 ? 'SW' : (VAR2 < 292.5 ? 'W' : (VAR2 > 292 ? 'NW' : 'Variable')))))))) . '.png')
	update		4000
	reload		1
	align		'L'
	scale		20
}

Widget S2_WIND {
	class		'Truetype'
	expression	file::exist(FWEATHER) == 0 ? '' :  (VAR0=file::readline(W . 'wind', 1); VAR1=substr(VAR0, strstr(VAR0, '|') + 1); VAR2=substr(VAR1, strstr(VAR1,'|') + 1); VAR2)
	font		file::readline('/tmp/lcd/font', 2)
	fcolor		'EEEEEE'
	width		80
	height		40
	align		'C'
	update		10000
	reload		1
}

Widget SS_WIND {
	class		'Truetype'
	expression	file::exist(FWEATHER) == 0 ? '' : round(substr(file::readline(W . 'wind', 1), 0, strstr(file::readline(W . 'wind', 1), '|'))). ' m/s'
	font		file::readline('/tmp/lcd/font', 2)
	fcolor		'EEEEEE'
	width		90
	height		35
	align		'L'
	update		10000
	reload		1
}

Widget SS_WIND1 {
	class		'Truetype'
	expression	file::exist(FWEATHER) == 0 ? '' : round(substr(file::readline(W . 'wind', 1), 0, strstr(file::readline(W . 'wind', 1), '|'))*3.6). ' km/h'
	font		'/usr/share/fonts/ubuntu-l-webfont.ttf'
	fcolor		'EEEEEE'
	width		190
	height		40
	align		'C'
	update		10000
	reload		1
}

Widget WEATHER_CITY1 {
	class		'Truetype'
	expression	file::exist(FWEATHER) == 0 ? '' : file::readline('/tmp/lcd/weather_city', 1)
	font		file::readline('/tmp/lcd/font', 2)
	fcolor		'EEEEEE'
	width		300
	height		50
	align		'C'
	update		10000
	reload		1
}

Widget WEATHERICON_CURRENT {
	class		'image'
	file		file::exist(FWEATHER) == 0 ? ICONS . 'blank.png' : file::readline('/tmp/lcd/weather_icon', 1)
	update		10000
	reload		1
	scale		100
}

Widget WEATHERICON_LATER {
	class		'image'
	file		file::exist(FWEATHER) == 0 ? ICONS . 'blank.png' : file::readline('/tmp/lcd/weather_icon', strftime('%H', time()) < 16 ? 2 : 3)
	update		10000
	reload		1
	scale		100
}

Widget TEMPERATURE_CURRENT {
	class		'Text'
	expression	file::exist(FWEATHER) == 0 ? '' : file::readline('/tmp/lcd/weather_temp', 1) . '째'
	align		'L'
	width		3
	update		10000
	reload		1
}

Widget TEMPERATURE_CURRENT1 {
	class		'Truetype'
	expression	file::exist(FWEATHER) == 0 ? '' : file::readline('/tmp/lcd/weather_temp', 1) . '째'
	font		file::readline('/tmp/lcd/font', 2)
	fcolor		'EEEEEE'
	width		64
	height		35
	align		'C'
	update		10000
	reload		1
}

Widget TEMPERATURE_LATER {
	class		'Text'
	expression	file::exist(FWEATHER) == 0 ? '' : (TEMP=file::readline('/tmp/lcd/weather_temp', strftime('%H', time()) < 16 ? 2 : 3); substr(TEMP, (strstr(TEMP, '|') + 1))) . '째'
	align		'R'
	width		3
	update		10000
	reload		1
}

Widget TEMPERATURE_LATER1 {
	class		'Truetype'
	expression	file::exist(FWEATHER) == 0 ? '' : (TEMP=file::readline('/tmp/lcd/weather_temp', strftime('%H', time()) < 16 ? 2 : 3); substr(TEMP, (strstr(TEMP, '|') + 1))) . '째'
	font		file::readline('/tmp/lcd/font', 2)
	fcolor		'EEEEEE'
	width		64
	height		35
	align		'C'
	update		10000
	reload		1
}


#--- 800x600 ----------------------------------------------------#

Widget S_BAR {
	class		'Image'
	file		ICONS . 'background/800x600/' . 'bar4.png'
	update		0
	reload		1
}

Widget S_BAR1 {
	class		'Image'
	file		ICONS . 'background/1024x600/' . 'bar5.png'
	update		0
	reload		1
}

Widget S_BANNER {
	class		'Image'
	file		file::exist('/tmp/lcd/menu') == 1 ? ICONS . 'background/800x600/' . 'banner1.png' : ICONS . 'background/800x600/' . 'banner.png'
	update		0
	reload		1
}

Widget S8_DURATION {
	class		'Image'
	file		ICONS . 'background/800x600/' . 'duration.png'
	update		0
	reload		1
}

Widget S_EVENT {
	class		'Image'
	file		ICONS . 'background/800x600/' . 'event.png'
	update		0
	reload		1
}

Widget S800_STRIPE {
	class		'Image'
	file		ICONS . 'background/800x600/' . 'stripe.png'
	update		0
	reload		1
}

Widget S1024_STRIPE {
	class		'Image'
	file		ICONS . 'background/1024x600/' . 'stripe.png'
	update		0
	reload		1
}

Widget S_SERVICE {
	class		'Image'
	file		ICONS . 'background/800x600/' . 'service.png'
	update		0
	reload		1
}

Widget S_TIME {
	class		'Image'
	file		ICONS . 'background/800x600/' . 'time.png'
	update		0
	reload		1
}

Widget S800x600_STB {
	class		'Image'
	file		ICONS . 'background/800x600/' . file::readline('/tmp/lcd/layout', 1) . '.png'
	update		0
	reload		1
}

Widget S800x600_BG {
	class		'Image'
	file		ICONS . 'background/800x600/' . file::readline('/tmp/lcd/layout', 1) . '.png'
	update		0
	reload		1
}

Widget S800x600_BG1 {
	class		'Image'
	file		ICONS . 'background/800x600/' . file::readline('/tmp/lcd/brightness', 1) . '.png'
	update		3000
	reload		1
}

Widget S800x600_STB1 {
	class		'Image'
	file		ICONS . 'background/800x600/' . file::readline('/tmp/lcd/brightness_standby', 1) . '.png'
	update		5000
	reload		1
}

Widget S800x600_XCAM {
	class		'Image'
	file		ICONS . 'background/800x600/' . file::readline('/tmp/lcd/layout', 1) . '.png'
	update		0
	reload		1
}

# 800x480 ----------------------------------------------------#

Widget S800x480_STB {
	class		'Image'
	file		ICONS . 'background/800x480/' . file::readline('/tmp/lcd/layout', 1) . '.png'
	update		0
	reload		1
}

Widget S800x480_BG {
	class		'Image'
	file		ICONS . 'background/800x480/' . file::readline('/tmp/lcd/layout', 1) . '.png'
	update		0
	reload		1
}

Widget S800x480_BG1 {
	class		'Image'
	file		ICONS . 'background/800x480/' . file::readline('/tmp/lcd/brightness', 1) . '.png'
	update		3000
	reload		1
}

Widget S800x480_STB1 {
	class		'Image'
	file		ICONS . 'background/800x480/' . file::readline('/tmp/lcd/brightness_standby', 1) . '.png'
	update		5000
	reload		1
}

Widget S800x480_XCAM {
	class		'Image'
	file		ICONS . 'background/800x480/' . file::readline('/tmp/lcd/layout', 1) . '.png'
	update		0
	reload		1
}

# 1024x600 ----------------------------------------------------#

Widget S1024x600_STB {
	class		'Image'
	file		ICONS . 'background/1024x600/' . file::readline('/tmp/lcd/layout', 1) . '.png'
	update		0
	reload		1
}

Widget S1024x600_BG {
	class		'Image'
	file		ICONS . 'background/1024x600/' . file::readline('/tmp/lcd/layout', 1) . '.png'
	update		0
	reload		1
}

Widget S1024x600_BG1 {
	class		'Image'
	file		ICONS . 'background/1024x600/' . file::readline('/tmp/lcd/brightness', 1) . '.png'
	update		3000
	reload		1
}

Widget S1024x600_STB1 {
	class		'Image'
	file		ICONS . 'background/1024x600/' . file::readline('/tmp/lcd/brightness_standby', 1) . '.png'
	update		5000
	reload		1
}

Widget S1024x600_XCAM {
	class		'Image'
	file		ICONS . 'background/1024x600/' . file::readline('/tmp/lcd/layout', 1) . '.png'
	update		0
	reload		1
}

#----------------------------------------------------------------------------------------------------------------------------------------#

Widget S_TIMER {
	class		'Image'
	file		ICONS . 'mode/timer_' . file::readline('/tmp/lcd/mode_timer', 1) . '.png'
	update		4000
	reload		1
	align		'R'
	scale		300
}

Widget S_VFORMAT {
	class		'Image'
	file		file::readline('/tmp/lcd/resolution', 1) eq '1920x1080' ? SYSICONS . 'res_hd.png' : ( file::readline('/tmp/lcd/resolution', 1) eq '1280x720' ? SYSICONS . 'res_hd.png' : ( file::readline('/tmp/lcd/resolution', 1) eq '1440x1080' ? SYSICONS . 'res_hd.png' : ( file::readline('/tmp/lcd/resolution', 1) eq '3840x2160' ? SYSICONS . 'res_uhd.png' : SYSICONS . 'res_sd.png' )  )
	update		4000
	reload		1
	align		'R'
	scale		150
}

Widget S_ASPECTRATIO {
	class		'Image'
	file		file::readline('/tmp/lcd/aspectratio', 1) eq '16:9' ? SYSICONS . '16_9.png' : SYSICONS . '16_9_gray.png'
	update		4000
	reload		1
	align		'R'
	scale		150
}

Widget S_DOLBY {
	class		'Image'
	file		file::readline('/tmp/lcd/dolbydigital', 1) eq 'yes' ? SYSICONS . 'dd.png' : SYSICONS . 'dd_gray.png'
	update		4000
	reload		1
	align		'R'
	scale		150
}

Widget S_TXT {
	class		'Image'
	file		file::readline('/tmp/lcd/videotext', 1) eq 'yes' ? SYSICONS . 'vtxt.png' : SYSICONS . 'vtxt_gray.png'
	update		4000
	reload		1
	align		'R'
	scale		150
}

Widget S_TUNERTXT {
	class		'Truetype'
	expression	'Tuner:'
	font		file::readline('/tmp/lcd/font', 2)
	fcolor		'58585800'
	#update		3000
	reload		1
	inverted	0
	size		0
	width		90
	height		25
	align		'C'
}

Widget S_TUNERTXT3 {
	class		'Truetype'
	expression	file::readline('/tmp/lcd/tuner', 1)
	font		file::readline('/tmp/lcd/font', 2)
	fcolor		'ffffff00'
	#update		3000
	reload		1
	inverted	0
	size		0
	width		35
	height		40
	align		'C'
}

Widget S_TUNER {
	class		'Image'
	file		SYSICONS . 'tuner_0' . file::readline('/tmp/lcd/tuner', 1) . '.png'
	update		4000
	reload		1
	align		'R'
	scale		150
}

Widget S_TUNER1 {
	class		'Image'
	file		SYSICONS . 'tuner_' . file::readline('/tmp/lcd/tuner', 1) .'.png'
	update		4000
	reload		1
	align		'R'
	scale		200
}

Widget S_TUNERTXT1 {
	class		'Truetype'
	expression	'SIG:'
	font		file::readline('/tmp/lcd/font', 2)
	fcolor		'58585800'
	#update		3000
	reload		1
	inverted	0
	size		0
	width		60
	height		25
	align		'C'
}

Widget S_TUNER_SIG {
	class		'Truetype'
	expression	file::readline('/tmp/lcd/tuner_sig', 1) . '%'
	font		file::readline('/tmp/lcd/font', 2)
	fcolor		'FFFFFF00'
	update		3000
	reload		1
	width		80
	height		40
	align		'C'
}

Widget S_TUNERTXT2 {
	class		'Truetype'
	expression	'SNR:'
	font		file::readline('/tmp/lcd/font', 2)
	fcolor		'58585800'
	#update		3000
	reload		1
	inverted	0
	size		0
	width		60
	height		25
	align		'C'
}

Widget S_TUNER_SNR {
	class		'Truetype'
	expression	file::readline('/tmp/lcd/tuner_snr', 1) . '%'
	font		file::readline('/tmp/lcd/font', 2)
	fcolor		'FFFFFF00'
	update		3000
	reload		1
	width		80
	height		40
	align		'C'
}

Widget S_REC {
	class		'Image'
	file		ICONS . 'mode/rec_' . file::readline('/tmp/lcd/mode_rec', 1) . '.png'
	update		4000
	reload		1
	inverted	0
	align		'R'
	scale		300
}

Widget S_TS {
	class		'Image'
	file		ICONS . 'mode/ts_' . file::readline('/tmp/lcd/mode_tshift', 1) . '.png'
	update		4000
	reload		1
	align		'R'
	scale		300
}

Widget S_ECM {
	class		'Image'
	file		ICONS . 'mode/ecm_' . file::readline('/tmp/lcd/mode_ecm', 1) . '.png'
	update		4000
	reload		1
	align		'R'
	scale		300
}

Widget S_CAMDD {
	class		'Image'
	file		ICONS . 'mode/cam_' . file::readline('/tmp/lcd/mode_camd', 1) . '.png'
	update		4000
	reload		1
	align		'R'
	scale		300
}

Widget S_CI {
	class		'Image'
	file		ICONS . 'mode/ci_' . file::readline('/tmp/lcd/mode_cam', 1) . '.png'
	update		4000
	reload		1
	align		'R'
	scale		300
}

Widget S_CAMD {
	class		'Image'
	file		file::exist(DOSCAM) == 1 ? ICONS . 'mode/camd_doscam.png' : ( file::exist(OSCAM) == 1 ? ICONS . 'mode/camd_oscam.png' :  ( file::exist(OSMOD) == 1 ? ICONS . 'mode/camd_osmod.png' :  ( file::exist(GBOX) == 1 ? ICONS . 'mode/camd_gbox.png' :  ( file::exist(CCCAM) == 1 ? ICONS . 'mode/camd_cccam.png' :  ( file::exist(MGCAMD) == 1 ? ICONS . 'mode/camd_mgcamd.png' :  ( file::exist(NCAM) == 1 ? ICONS . 'mode/camd_ncam.png' :  ICONS . 'mode/camd_off.png' ) ) ) ) ) )
	update		4000
	reload		1
	align		'R'
	scale		300
}

Widget S_LOGO {
	class		'Image'
	file		file::exist('/tmp/lcd/menu') == 1 ? ICONS . 'menu.png' : file::readline('/tmp/lcd/logo', 1)
	update		3000
	reload		1
	center		108
	width		780
	height		108
	#scale		270
}

Widget S_LOGO1 {
	class		'Image'
	file		file::exist('/tmp/lcd/menu') == 1 ? ICONS . 'menu.png' : file::readline('/tmp/lcd/logo', 1)
	update		3000
	reload		1
	center		108
	width		1004
	height		108
	#scale		270
}

Widget S_TTF-CHANNEL {
	class		'Truetype'
	expression	file::readline('/tmp/lcd/mode_logo', 1) == 1 ? '' : file::readline('/tmp/lcd/service', 1)
	font		file::readline('/tmp/lcd/font', 2)
	fcolor		'58585800'
	update		3000
	reload		1
	width		780
	height		70
	align		'C'
}

Widget S_TTF-CHANNEL1 {
	class		'Truetype'
	expression	file::readline('/tmp/lcd/mode_logo', 1) == 1 ? '' : file::readline('/tmp/lcd/service', 1)
	font		file::readline('/tmp/lcd/font', 2)
	fcolor		'58585800'
	update		3000
	reload		1
	width		1004
	height		90
	align		'C'
}

Widget S_TTF-CHANNEL1 {
	class		'Truetype'
	expression	file::readline('/tmp/lcd/mode_logo', 1) == 1 ? '' : file::readline('/tmp/lcd/service', 1)
	font		file::readline('/tmp/lcd/font', 2)
	fcolor		'58585800'
	update		3000
	reload		1
	width		1004
	height		90
	align		'C'
}

Widget S_START {
	class		'Truetype'
	font		file::readline('/tmp/lcd/font', 2)
	fcolor		'bbbbbb00'
	size		0
	width		200
	height		50
	align		'C'
	expression	file::exist('/tmp/lcd/menu') == 1 | file::readline('/tmp/lcd/event', 1) le '' ? '' : file::readline('/tmp/lcd/start', 1)
	update		3000
	reload		1
}

Widget S_END {
	class		'Truetype'
	font		file::readline('/tmp/lcd/font', 2)
	fcolor		'88888800'
	size		0
	width		200
	height		50
	align		'C'
	expression	file::exist('/tmp/lcd/menu') == 1 | file::readline('/tmp/lcd/event', 2) le '' ? '' : file::readline('/tmp/lcd/end', 1)
	update		3000
	reload		1
}

Widget S_TTF-EPG-NOW {
	class		'Truetype'
	expression	file::exist('/tmp/lcd/menu') == 1 ? file::readline('/tmp/lcd/menu', 1) : (file::readline('/tmp/lcd/event', 1) le '' ? '' : substr(file::readline('/tmp/lcd/event', 1), 0, 32)
	font		file::readline('/tmp/lcd/font', 2)
	fcolor		'bbbbbb00'
	update		3000
	reload		1
	inverted	0
	size		0
	width		795
	height		50
	align		'C'
}

Widget S_TTF-EPG-NOW1 {
	class		'Truetype'
	expression	file::exist('/tmp/lcd/menu') == 1 ? file::readline('/tmp/lcd/menu', 1) : (file::readline('/tmp/lcd/event', 1) le '' ? '' : substr(file::readline('/tmp/lcd/event', 1), 0, 42)
	font		file::readline('/tmp/lcd/font', 2)
	fcolor		'bbbbbb00'
	update		3000
	reload		1
	inverted	0
	size		0
	width		1019
	height		50
	align		'C'
}

Widget S_TTF-EPG-NEXT {
	class		'Truetype'
	expression	file::exist('/tmp/lcd/menu') == 1 ? '' : (file::readline('/tmp/lcd/event', 2) le '' ? '' : substr(file::readline('/tmp/lcd/event', 2), 0, 32)
	font		file::readline('/tmp/lcd/font', 2)
	fcolor		'88888800'
	update		3000
	reload		1
	inverted	0
	size		0
	width		795
	height		50
	align		'C'
}

Widget S_TTF-EPG-NEXT1 {
	class		'Truetype'
	expression	file::exist('/tmp/lcd/menu') == 1 ? '' : (file::readline('/tmp/lcd/event', 2) le '' ? '' : substr(file::readline('/tmp/lcd/event', 2), 0, 42)
	font		file::readline('/tmp/lcd/font', 2)
	fcolor		'88888800'
	update		3000
	reload		1
	inverted	0
	size		0
	width		1019
	height		50
	align		'C'
}

Widget S_DURATION {
	class		'Truetype'
	expression	file::exist('/tmp/lcd/menu') == 1 ? '' : file::readline('/tmp/lcd/duration', 1)
	font		file::readline('/tmp/lcd/font', 2)
	fcolor		'fd6d1300'
	update		3000
	reload		1
	inverted	0
	size		0
	width		160
	height		50
	align		'R'
}

Widget S_DURATION1 {
	class		'Truetype'
	expression	file::exist('/tmp/lcd/menu') == 1 ? '' : file::readline('/tmp/lcd/duration', 1)
	font		file::readline('/tmp/lcd/font', 2)
	fcolor		'fd6d1300'
	update		3000
	reload		1
	width		160
	height		40
	align		'C'
}

Widget S_DURATION_BJ {
	class		'Truetype'
	expression	file::exist('/tmp/lcd/menu') == 1 ? '' : file::readline('/tmp/lcd/duration', 2)
	font		file::readline('/tmp/lcd/font', 2)
	fcolor		'ff000000'
	update		3000
	reload		1
	width		60
	height		30
	align		'C'
}

Widget S_DURATION_BE {
	class		'Truetype'
	expression	file::exist('/tmp/lcd/menu') == 1 ? '' : file::readline('/tmp/lcd/duration', 3)
	font		file::readline('/tmp/lcd/font', 2)
	fcolor		'13ff0000'
	update		3000
	reload		1
	width		60
	height		30
	align		'C'
}

Widget S_DURATION_KPL {
	class		'Truetype'
	expression	file::exist('/tmp/lcd/menu') == 1 ? '' : file::readline('/tmp/lcd/duration', 4)
	font		file::readline('/tmp/lcd/font', 2)
	fcolor		'fd6d1300'
	update		3000
	reload		1
	width		60
	height		30
	align		'C'
}

Widget S_LEFT1 {
	class		'Image'
	file		file::exist('/tmp/lcd/menu') == 1 ? '' : ICONS . 'left1.png'
	update		4000
	reload		1
}

Widget S_RIGHT1 {
	class		'Image'
	file		file::exist('/tmp/lcd/menu') == 1 ? '' : ICONS . 'right1.png'
	update		4000
	reload		1
}

Widget S_LEFT2 {
	class		'Image'
	file		file::exist('/tmp/lcd/menu') == 1 ? '' : ICONS . 'left2.png'
	update		4000
	reload		1
}

Widget S_RIGHT2 {
	class		'Image'
	file		file::exist('/tmp/lcd/menu') == 1 ? '' : ICONS . 'right2.png'
	update		4000
	reload		1
}

Widget S_DURATION_BJ1 {
	class		'Truetype'
	expression	file::exist('/tmp/lcd/menu') == 1 ? '' : file::readline('/tmp/lcd/duration', 2)
	font		file::readline('/tmp/lcd/font', 2)
	fcolor		'ff000000'
	update		3000
	reload		1
	width		90
	height		40
	align		'C'
}

Widget S_DURATION_BE1 {
	class		'Truetype'
	expression	file::exist('/tmp/lcd/menu') == 1 ? '' : file::readline('/tmp/lcd/duration', 3)
	font		file::readline('/tmp/lcd/font', 2)
	fcolor		'13ff0000'
	update		3000
	reload		1
	width		90
	height		40
	align		'C'
}

Widget S_DURATION_KPL1 {
	class		'Truetype'
	expression	file::exist('/tmp/lcd/menu') == 1 ? '' : file::readline('/tmp/lcd/duration', 4)
	font		file::readline('/tmp/lcd/font', 2)
	fcolor		'cccccc00'
	update		3000
	reload		1
	width		90
	height		40
	align		'C'
}

Widget S_EPGBAR {
	class		'Bar'
	expression	file::exist('/tmp/lcd/menu') == 1 ? '' : file::readline('/tmp/lcd/progress', 1)
	min		0
	max		100
	length		68
	update		3000
	direction	'E'
	foreground	'ff0000'
}

Widget S_EPGBAR1 {
	class		'Bar'
	expression	file::exist('/tmp/lcd/menu') == 1 ? '' : file::readline('/tmp/lcd/progress', 1)
	min		0
	max		100
	length		105
	update		3000
	direction	'E'
	foreground	'ff0000'
}

Widget HST {
	class		'Truetype'
	expression	file::readline('/tmp/lcd/brightness', 1)
	font		file::readline('/tmp/lcd/font', 2)
	fcolor		'585858'
	width		30
	height		20
	align		'L'
	update		4000
	reload		1
}

Widget HST_STB {
	class		'Truetype'
	expression	file::readline('/tmp/lcd/brightness_standby', 1)
	font		file::readline('/tmp/lcd/font', 2)
	fcolor		'585858'
	width		30
	height		20
	align		'L'
	update		0
	reload		1
}

Widget RES320x240 {
	class		'Truetype'
	expression	file::readline('/usr/share/lcd/icons/spf.txt', 11)
	font		file::readline('/tmp/lcd/font', 2)
	fcolor		'585858'
	width		120
	height		20
	align		'R'
	update		0
}

Widget RES800x480 {
	class		'Truetype'
	expression	file::readline('/usr/share/lcd/icons/spf.txt', 8)
	font		file::readline('/tmp/lcd/font', 2)
	fcolor		'585858'
	width		90
	height		20
	align		'R'
	update		0
}

Widget RES800x600 {
	class		'Truetype'
	expression	file::readline('/usr/share/lcd/icons/spf.txt', 9)
	font		file::readline('/tmp/lcd/font', 2)
	fcolor		'585858'
	width		90
	height		20
	align		'R'
	update		0
}

Widget RES1024x600 {
	class		'Truetype'
	expression	file::readline('/usr/share/lcd/icons/spf.txt', 10)
	font		file::readline('/tmp/lcd/font', 2)
	fcolor		'585858'
	width		100
	height		20
	align		'R'
	update		0
}

# --- the digital clock ----------------------------------------------------- #

Widget S_HOUR1_ {
	class		'image'
	file		ICONS . 'clock/digital_white_129px/' . substr(strftime('%H', time()), 0, 1) . '.png'
	update		10000
	reload		1
	scale		70
}

Widget S_HOUR_1 {
	class		'image'
	file		ICONS . 'clock/digital_white_129px/' . substr(strftime('%H', time()), 1) . '.png'
	update		10000
	reload		1
	scale		70
}

Widget S_DP {
	class		'Image'
	file		ICONS . 'clock/digital_white_129px/dp.png'
	update		0
	scale		70
}

Widget S_MIN1_ {
	class		'image'
	file		ICONS . 'clock/digital_white_129px/' . substr(strftime('%M', time()), 0, 1) . '.png'
	update		10000
	reload		1
	scale		70
}

Widget S_MIN_1 {
	class		'image'
	file		ICONS . 'clock/digital_white_129px/' . substr(strftime('%M', time()), 1) . '.png'
	update		10000
	reload		1
	scale		70
}

Widget S_STANDBY_HOUR1_ {
	class		'image'
	file		file::exist(FCLOCK) == 1 ? ICONS . 'blank.png' : ICONS . 'clock/digital_white_129px/' . substr(strftime('%H', time()), 0, 1) . '.png'
	update		10000
	reload		1
	scale		130
}

Widget S_STANDBY_HOUR_1 {
	class		'image'
	file		file::exist(FCLOCK) == 1 ? ICONS . 'blank.png' : ICONS . 'clock/digital_white_129px/' . substr(strftime('%H', time()), 1) . '.png'
	update		10000
	reload		1
	scale		130
}

Widget S_STANDBY_DP {
	class		'Image'
	file		file::exist(FCLOCK) == 1 ? ICONS . 'blank.png' : ICONS . 'clock/digital_white_129px/dp.png'
	update		0
	scale		130
}

Widget S_STANDBY_MIN1_ {
	class		'image'
	file		file::exist(FCLOCK) == 1 ? ICONS . 'blank.png' : ICONS . 'clock/digital_white_129px/' . substr(strftime('%M', time()), 0, 1) . '.png'
	update		10000
	reload		1
	scale		130
}

Widget S_STANDBY_MIN_1 {
	class		'image'
	file		file::exist(FCLOCK) == 1 ? ICONS . 'blank.png' : ICONS . 'clock/digital_white_129px/' . substr(strftime('%M', time()), 1) . '.png'
	update		10000
	reload		1
	scale		130
}

# --- Tag Datum ----------------------------------------------------- #

Widget TAGDATUM-TTF {
	class		'truetype'
	expression	(strftime('%u', time()) == 1 ? 'Montag' : (strftime('%u', time()) == 2 ? 'Dienstag' : (strftime('%u', time()) == 3 ? 'Mittwoch' : (strftime('%u', time()) == 4 ? 'Donnerstag' : (strftime('%u', time()) == 5 ? 'Freitag' : (strftime('%u', time()) == 6 ? 'Samstag' : 'Sonntag')))))) . ', ' . strftime('%d.%m.%Y', time())
	font		file::readline('/tmp/lcd/font', 2)
	fcolor		'EEEEEE00'
	align		'C'
	width		800
	height		75
	update		30000
	reload		1
	visible		1
}

Widget TAGDATUM-TTF1 {
	class		'truetype'
	expression	(strftime('%u', time()) == 1 ? 'Montag' : (strftime('%u', time()) == 2 ? 'Dienstag' : (strftime('%u', time()) == 3 ? 'Mittwoch' : (strftime('%u', time()) == 4 ? 'Donnerstag' : (strftime('%u', time()) == 5 ? 'Freitag' : (strftime('%u', time()) == 6 ? 'Samstag' : 'Sonntag')))))) . ', ' . strftime('%d.%m.%Y', time())
	font		file::readline('/tmp/lcd/font', 2)
	fcolor		'EEEEEE00'
	align		'C'
	width		1000
	height		75
	update		30000
	reload		1
	visible		1
}

# --------------------------------------------------------------------------- #

Layout Samsung800x600_user {
	Layer 0 {
		X1.Y1		'S800x600_BG1'
	}
	Layer 1 {
		X19.Y20		'S_SERVICE'
		X17.Y200	'S_TIMER'
		X17.Y325	'S_REC'
		X17.Y415	'S_TS'
		X17.Y475	'S_CI'
		X17.Y560	'S_CAMD'
		X17.Y710	'S_ECM'
		X70.Y10		'S_LOGO'
		X205.Y1		'S800_STRIPE'
		X228.Y20	'S_EVENT'
		X225.Y125	'S_TUNERTXT'
		X220.Y220	'S_TUNERTXT3'
		X225.Y270	'S_TUNERTXT1'
		X220.Y340	'S_TUNER_SIG'
		X225.Y440	'S_TUNERTXT2'
		X220.Y510	'S_TUNER_SNR'
		X222.Y623	'S_VFORMAT'
		X222.Y662	'S_ASPECTRATIO'
		X222.Y716	'S_DOLBY'
		X222.Y755	'S_TXT'
		X265.Y1		'S800_STRIPE'
		X280.Y5		'S_TTF-EPG-NOW'
		X330.Y1		'S800_STRIPE'
		X350.Y6		'S_START'
		X343.Y250	'S_DURATION_BJ1'
		X345.Y340	'S_LEFT1'
		X343.Y360	'S_DURATION_KPL1'
		X345.Y450	'S_RIGHT1'
		X343.Y470	'S_DURATION_BE1'
		X350.Y602	'S_END'
		X410.Y1		'S800_STRIPE'
		X420.Y5		'S_TTF-EPG-NEXT'
		X470.Y1		'S800_STRIPE'
		X480.Y20	'S_TIME'
		X480.Y460	'ICON_WEATHER1'
		X479.Y380	'WEATHERICON_CURRENT'
		X547.Y380	'TEMPERATURE_CURRENT1'
		X505.Y500	'S2_WIND'
		X550.Y440	'SS_WIND1'
		X479.Y640	'WEATHERICON_LATER'
		X547.Y640	'TEMPERATURE_LATER1'
		X500.Y35	'S_HOUR1_'
		X500.Y100	'S_HOUR_1'
		X500.Y173	'S_DP'
		X500.Y200	'S_MIN1_'
		X500.Y265	'S_MIN_1'
		X580.Y5		'HST'
		X580.Y700	'RES800x600'
	}
	Layer 2 {
		X70.Y10		'S_TTF-CHANNEL'
		Row50.Col34	'S_EPGBAR'
	}
	Layer 3 {
		X393.Y199	'S_BAR'
		X1.Y1		'S800x600_BG'
	}
}

Layout Samsung800x480_user {
	Layer 0 {
		X1.Y1		'S800x480_BG1'
	}
	Layer 1 {
		X19.Y20		'S_SERVICE'
		X17.Y200	'S_TIMER'
		X17.Y325	'S_REC'
		X17.Y415	'S_TS'
		X17.Y475	'S_CI'
		X17.Y560	'S_CAMD'
		X17.Y710	'S_ECM'
		X65.Y10		'S_LOGO'
		X200.Y1		'S800_STRIPE'
		X223.Y20	'S_EVENT'
		X220.Y125	'S_TUNERTXT'
		X215.Y220	'S_TUNERTXT3'
		X220.Y270	'S_TUNERTXT1'
		X215.Y340	'S_TUNER_SIG'
		X220.Y440	'S_TUNERTXT2'
		X215.Y510	'S_TUNER_SNR'
		X217.Y623	'S_VFORMAT'
		X217.Y662	'S_ASPECTRATIO'
		X217.Y716	'S_DOLBY'
		X217.Y755	'S_TXT'
		X255.Y1		'S800_STRIPE'
		X270.Y5		'S_TTF-EPG-NOW'
		X320.Y1		'S800_STRIPE'
		X340.Y6		'S_START'
		X338.Y250	'S_DURATION_BJ1'
		X340.Y340	'S_LEFT1'
		X338.Y360	'S_DURATION_KPL1'
		X340.Y450	'S_RIGHT1'
		X338.Y470	'S_DURATION_BE1'
		X340.Y602	'S_END'
		X400.Y1		'S800_STRIPE'
		X410.Y5		'S_TTF-EPG-NEXT'
		X460.Y5		'HST'
		X460.Y700	'RES800x480'
	}
	Layer 2 {
		X70.Y10		'S_TTF-CHANNEL'
		Row50.Col34	'S_EPGBAR'
	}
	Layer 3 {
		X393.Y199	'S_BAR'
		X1.Y1		'S800x480_BG'
	}
}

Layout Samsung1024x600_user {
	Layer 0 {
		X1.Y1		'S1024x600_BG1'
	}
	Layer 1 {
		X19.Y20		'S_SERVICE'
		X13.Y330	'S_TIMER'
		X13.Y475	'S_REC'
		X13.Y585	'S_TS'
		X13.Y665	'S_CI'
		X13.Y770	'S_CAMD'
		X13.Y930	'S_ECM'
		X60.Y10		'S_LOGO1'
		X205.Y1		'S1024_STRIPE'
		X228.Y20	'S_EVENT'
		X225.Y225	'S_TUNERTXT'
		X220.Y320	'S_TUNERTXT3'
		X225.Y390	'S_TUNERTXT1'
		X220.Y460	'S_TUNER_SIG'
		X225.Y580	'S_TUNERTXT2'
		X220.Y650	'S_TUNER_SNR'
		X222.Y823	'S_VFORMAT'
		X222.Y862	'S_ASPECTRATIO'
		X222.Y916	'S_DOLBY'
		X222.Y955	'S_TXT'
		X265.Y1		'S1024_STRIPE'
		X280.Y5		'S_TTF-EPG-NOW1'
		X330.Y1		'S1024_STRIPE'
		X350.Y6		'S_START'
		X343.Y350	'S_DURATION_BJ1'
		X345.Y440	'S_LEFT1'
		X343.Y460	'S_DURATION_KPL1'
		X345.Y550	'S_RIGHT1'
		X343.Y570	'S_DURATION_BE1'
		X350.Y828	'S_END'
		X410.Y1		'S1024_STRIPE'
		X420.Y5		'S_TTF-EPG-NEXT1'
		X470.Y1		'S1024_STRIPE'
		X480.Y20	'S_TIME'
		X480.Y660	'ICON_WEATHER1'
		X479.Y580	'WEATHERICON_CURRENT'
		X547.Y580	'TEMPERATURE_CURRENT1'
		X505.Y700	'S2_WIND'
		X550.Y640	'SS_WIND1'
		X479.Y840	'WEATHERICON_LATER'
		X547.Y840	'TEMPERATURE_LATER1'
		X500.Y35	'S_HOUR1_'
		X500.Y100	'S_HOUR_1'
		X500.Y173	'S_DP'
		X500.Y200	'S_MIN1_'
		X500.Y265	'S_MIN_1'
		X580.Y5		'HST'
		X580.Y924	'RES1024x600'
	}
	Layer 2 {
		X70.Y10		'S_TTF-CHANNEL'
		Row50.Col34	'S_EPGBAR1'
	}
	Layer 3 {
		X393.Y199	'S_BAR1'
		X1.Y1		'S1024x600_BG'
	}
}

# --- General Settings ------------------------------------------------------ #

Variables {
	W		'/tmp/lcd/weather_'
	W_ICON		'/share/lcd/icons/wind/'
	ICONS		'/share/lcd/icons/'
	SYSICONS	'/share/tuxbox/neutrino/icons/'
	FWEATHER	'/var/etc/.lcd-weather'
	FCLOCK		'/var/etc/.lcd-clock_a'
	FXCAM		'/var/etc/.lcd-xcam'
	OSCAM		'/var/etc/.oscam'
	DOSCAM		'/var/etc/.doscam'
	OSMOD		'/var/etc/.osmod'
	CCCAM		'/var/etc/.cccam'
	MGCAMD		'/var/etc/.mgcamd'
	GBOX		'/var/etc/.gbox'
	NCAM		'/var/etc/.ncam'
}

# --------------------------------------------------------------------------- #

Display file::readline('/tmp/lcd/layout', 1)

Layout file::readline('/tmp/lcd/layout', 1)

# --------------------------------------------------------------------------- #
