# --- Samsung SPF-Auto --------------------------------------------- #

Display Samsung800x600_standard {
	driver		'SamsungSPF'
	model		'SPF-Auto'
	port		'usb0'
	font		'20x40'
	size		'800x600'
	basecolor	'dddddd'
	foreground	'ffffff'
	background	'00000000'
	orientation	1
}

Display Samsung800x600_radio {
	driver		'SamsungSPF'
	model		'SPF-Auto'
	port		'usb0'
	font		'20x40'
	size		'800x600'
	basecolor	'dddddd'
	foreground	'ffffff'
	background	'00000000'
	orientation	1
}

Display Samsung800x600_xcam {
	driver		'SamsungSPF'
	model		'SPF-Auto'
	port		'usb0'
	font		'15x24'
	size		'800x600'
	basecolor	'dddddd'
	foreground	'ffffff'
	background	'00000000'
	orientation	1
}

Display Samsung800x600_standby {
	driver		'SamsungSPF'
	model		'SPF-Auto'
	port		'usb0'
	font		'20x40'
	size		'800x600'
	basecolor	'000000'
	foreground	'ffffff'
	background	'00000000'
	orientation	1
}

# --- the weather ----------------------------------------------------------- #

Widget ICON_WEATHER {
	class		'Image'
	file		file::exist(FWEATHER) == 0 ? ICONS . 'mode/weather_off.png' : ICONS . 'mode/weather_on.png'
	update		10000
	reload		1
}

Widget ICON_WEATHER1 {
	class		'Image'
	file		file::exist(FWEATHER) == 0 ? ICONS . 'mode/weather_off.png' : ICONS . 'mode/weather_on.png'
	update		10000
	reload		1
	scale		300
}

Widget ICON_WEATHER2 {
	class		'Image'
	file		file::exist(FWEATHER) == 0 ? ICONS . 'mode/weather_off.png' : ICONS . 'mode/weather_on.png'
	update		10000
	reload		1
	scale		200
}

Widget S_WIND {
	class		'Image'
	file		file::exist(FWEATHER) == 0 ? '' :  (VAR0=file::readline(W . 'wind', 1); VAR1=substr(VAR0, strstr(VAR0, '|') + 1); VAR2=substr(VAR1, strstr(VAR1,'|') + 1); W_ICON . VAR2 . '.png')
	update		4000
	reload		1
	align		'L'
}

Widget S1_WIND {
	class		'Image'
	file		file::exist(FWEATHER) == 0 ? '' : (VAR1=file::readline(W . 'wind', 1); VAR2=substr(VAR1, strstr(VAR1, '|') + 1); W_ICON . (VAR2 < 22.5 ? 'N' : (VAR2 < 67.5 ? 'NO' : (VAR2 < 112.5 ? 'O' : (VAR2 < 157.5 ? 'SO' : (VAR2 < 202.5 ? 'S' : (VAR2 < 247.5 ? 'SW' : (VAR2 < 292.5 ? 'W' : (VAR2 > 292 ? 'NW' : 'Variable')))))))) . '.png')
	update		4000
	reload		1
	align		'L'
	scale		20
}

Widget SS_WIND {
	class		'Truetype'
	font		file::readline('/tmp/lcd/font', 1)
	fcolor		'EEEEEE'
	width		100
	height		35
	align		'L'
	expression	file::exist(FWEATHER) == 0 ? '' : round(substr(file::readline(W . 'wind', 1), 0, strstr(file::readline(W . 'wind', 1), '|'))). ' m/s'
	update		10000
	reload		1
}

Widget WEATHER_CITY1 {
	class		'Truetype'
	font		file::readline('/tmp/lcd/font', 1)
	fcolor		'EEEEEE'
	width		300
	height		50
	align		'C'
	expression	file::exist(FWEATHER) == 0 ? '' : file::readline('/tmp/lcd/weather_city', 1)
	update		10000
	reload		1
}

Widget WEATHERICON_CURRENT {
	class		'image'
	file		file::exist(FWEATHER) == 0 ? ICONS . 'blank.png' : file::readline('/tmp/lcd/weather_icon', 1)
	update		10000
	reload		1
	scale		100
}

Widget WEATHERICON_LATER {
	class		'image'
	file		file::exist(FWEATHER) == 0 ? ICONS . 'blank.png' : file::readline('/tmp/lcd/weather_icon', strftime('%H', time()) < 16 ? 2 : 3)
	update		10000
	reload		1
	scale		100
}

Widget TEMPERATURE_CURRENT {
	class		'Text'
	expression	file::exist(FWEATHER) == 0 ? '' : file::readline('/tmp/lcd/weather_temp', 1) . '째'
	align		'L'
	width		3
	update		10000
	reload		1
}

Widget TEMPERATURE_CURRENT1 {
	class		'Truetype'
	font		file::readline('/tmp/lcd/font', 1)
	fcolor		'EEEEEE'
	width		64
	height		35
	align		'C'
	expression	file::exist(FWEATHER) == 0 ? '' : file::readline('/tmp/lcd/weather_temp', 1) . '째'
	update		10000
	reload		1
}

Widget TEMPERATURE_LATER {
	class		'Text'
	expression	file::exist(FWEATHER) == 0 ? '' : (TEMP=file::readline('/tmp/lcd/weather_temp', strftime('%H', time()) < 16 ? 2 : 3); substr(TEMP, (strstr(TEMP, '|') + 1))) . '째'
	align		'R'
	width		3
	update		10000
	reload		1
}

Widget TEMPERATURE_LATER1 {
	class		'Truetype'
	font		file::readline('/tmp/lcd/font', 1)
	fcolor		'EEEEEE'
	width		64
	height		35
	align		'C'
	expression	file::exist(FWEATHER) == 0 ? '' : (TEMP=file::readline('/tmp/lcd/weather_temp', strftime('%H', time()) < 16 ? 2 : 3); substr(TEMP, (strstr(TEMP, '|') + 1))) . '째'
	update		10000
	reload		1
}

# --- OS/N/DOScam ----------------------------------------------------------- #

Widget XCAMLINE01 {
	class		'Text'
	width		53
	align		'L'
	expression	file::exist(FXCAM) == 1 ? file::readline(file::readline(FXCAM, 1), 1) : 'Noob! :)'
	update		10000
	foreground	'f5f5f5'
}

Widget XCAMLINE02 {
	class		'Text'
	width		53
	align		'L'
	expression	file::exist(FXCAM) == 1 ? file::readline(file::readline(FXCAM, 1), 2) : 'Noob! :)'
	update		10000
	foreground	'f5f5f5'
}

Widget XCAMLINE03 {
	class		'Text'
	width		53
	align		'L'
	expression	file::exist(FXCAM) == 1 ? file::readline(file::readline(FXCAM, 1), 3) : 'Noob! :)'
	update		10000
	foreground	'f5f5f5'
}

Widget XCAMLINE04 {
	class		'Text'
	width		53
	align		'L'
	expression	file::exist(FXCAM) == 1 ? file::readline(file::readline(FXCAM, 1), 4) : 'Noob! :)'
	update		10000
	foreground	'f5f5f5'
}

Widget XCAMLINE05 {
	class		'Text'
	width		53
	align		'L'
	expression	file::exist(FXCAM) == 1 ? file::readline(file::readline(FXCAM, 1), 5) : 'Noob! :)'
	update		10000
	foreground	'f5f5f5'
}

Widget XCAMLINE06 {
	class		'Text'
	width		53
	align		'L'
	expression	file::exist(FXCAM) == 1 ? file::readline(file::readline(FXCAM, 1), 6) : 'Noob! :)'
	update		10000
}

Widget XCAMLINE07 {
	class		'Text'
	width		53
	align		'L'
	expression	file::exist(FXCAM) == 1 ? file::readline(file::readline(FXCAM, 1), 7) : 'Noob! :)'
	update		10000
}

Widget XCAMLINE08 {
	class		'Text'
	width		53
	align		'L'
	expression	file::exist(FXCAM) == 1 ? file::readline(file::readline(FXCAM, 1), 8) : 'Noob! :)'
	update		10000
}

Widget XCAMLINE09 {
	class		'Text'
	width		53
	align		'L'
	expression	file::exist(FXCAM) == 1 ? file::readline(file::readline(FXCAM, 1), 9) : 'Noob! :)'
	update		10000
}

Widget XCAMLINE10 {
	class		'Text'
	width		53
	align		'L'
	expression	file::exist(FXCAM) == 1 ? file::readline(file::readline(FXCAM, 1), 10) : 'Noob! :)'
	update		10000
}

Widget XCAMLINE11 {
	class		'Text'
	width		53
	align		'L'
	expression	file::exist(FXCAM) == 1 ? file::readline(file::readline(FXCAM, 1), 11) : 'Noob! :)'
	update		10000
}

Widget XCAMLINE12 {
	class		'Text'
	width		53
	align		'L'
	expression	file::exist(FXCAM) == 1 ? file::readline(file::readline(FXCAM, 1), 12) : 'Noob! :)'
	update		10000
}

Widget XCAMLINE13 {
	class		'Text'
	width		53
	align		'L'
	expression	file::exist(FXCAM) == 1 ? file::readline(file::readline(FXCAM, 1), 13) : 'Noob! :)'
	update		10000
}

Widget XCAMLINE14 {
	class		'Text'
	width		53
	align		'L'
	expression	file::exist(FXCAM) == 1 ? file::readline(file::readline(FXCAM, 1), 14) : 'Noob! :)'
	update		10000
}

Widget XCAMLINE15 {
	class		'Text'
	width		53
	align		'L'
	expression	file::exist(FXCAM) == 1 ? file::readline(file::readline(FXCAM, 1), 15) : 'Noob! :)'
	update		10000
}

Widget XCAMLINE16 {
	class		'Text'
	width		53
	align		'L'
	expression	file::exist(FXCAM) == 1 ? file::readline(file::readline(FXCAM, 1), 16) : 'Noob! :)'
	update		10000
}

Widget XCAMLINE17 {
	class		'Text'
	width		53
	align		'L'
	expression	file::exist(FXCAM) == 1 ? file::readline(file::readline(FXCAM, 1), 17) : 'Noob! :)'
	update		10000
}

Widget XCAMLINE18 {
	class		'Text'
	width		53
	align		'L'
	expression	file::exist(FXCAM) == 1 ? file::readline(file::readline(FXCAM, 1), 18) : 'Noob! :)'
	update		10000
}

Widget XCAMLINE19 {
	class		'Text'
	width		53
	align		'L'
	expression	file::exist(FXCAM) == 1 ? file::readline(file::readline(FXCAM, 1), 19) : 'Noob! :)'
	update		10000
}

Widget XCAMLINE20 {
	class		'Text'
	width		53
	align		'L'
	expression	file::exist(FXCAM) == 1 ? file::readline(file::readline(FXCAM, 1), 20) : 'Noob! :)'
	update		10000
}

Widget XCAMLINE21 {
	class		'Text'
	width		53
	align		'L'
	expression	file::exist(FXCAM) == 1 ? file::readline(file::readline(FXCAM, 1), 21) : 'Noob! :)'
	update		10000
}

Widget XCAMLINE22 {
	class		'Text'
	width		53
	align		'L'
	expression	file::exist(FXCAM) == 1 ? file::readline(file::readline(FXCAM, 1), 22) : 'Noob! :)'
	update		10000
}

Widget XCAMLINE23 {
	class		'Text'
	width		53
	align		'L'
	expression	file::exist(FXCAM) == 1 ? file::readline(file::readline(FXCAM, 1), 23) : 'Noob! :)'
	update		10000
}

Widget XCAMLINE24 {
	class		'Text'
	width		53
	align		'L'
	expression	file::exist(FXCAM) == 1 ? file::readline(file::readline(FXCAM, 1), 24) : 'Noob! :)'
	update		10000
}

Widget XCAMLINE25 {
	class		'Text'
	width		53
	align		'L'
	expression	file::exist(FXCAM) == 1 ? file::readline(file::readline(FXCAM, 1), 25) : 'Noob! :)'
	update		10000
}

Widget XCAMLINE26 {
	class		'Text'
	width		53
	align		'L'
	expression	file::exist(FXCAM) == 1 ? file::readline(file::readline(FXCAM, 1), 26) : 'Noob! :)'
	update		10000
}

Widget XCAMLINE27 {
	class		'Text'
	width		53
	align		'L'
	expression	file::exist(FXCAM) == 1 ? file::readline(file::readline(FXCAM, 1), 27) : 'Noob! :)'
	update		10000
}

Widget XCAMLINE28 {
	class		'Text'
	width		53
	align		'L'
	expression	file::exist(FXCAM) == 1 ? file::readline(file::readline(FXCAM, 1), 28) : 'Noob! :)'
	update		10000
}

Widget XCAMLINE29 {
	class		'Text'
	width		53
	align		'L'
	expression	file::exist(FXCAM) == 1 ? file::readline(file::readline(FXCAM, 1), 29) : 'Noob! :)'
	update		10000
}

Widget XCAMLINE30 {
	class		'Text'
	width		53
	align		'L'
	expression	file::exist(FXCAM) == 1 ? file::readline(file::readline(FXCAM, 1), 30) : 'Noob! :)'
	update		10000
}

# --------------------------------------------------------------------------- #

# 800x600 Helligkeitssteuerung ----------------------------------------------------#

Widget S800x600_STB {
	class		'Image'
	file		ICONS . 'background/800x600/' . file::readline('/tmp/lcd/layout', 1) . '.png'
	update		0
	reload		1
}

Widget S800x600_BG {
	class		'Image'
	file		ICONS . 'background/800x600/' . file::readline('/tmp/lcd/layout', 1) . '_neu.png'
	update		0
	reload		1
}

Widget S800x600_BG1 {
	class		'Image'
	file		ICONS . 'background/800x600/' . file::readline('/tmp/lcd/brightness', 1) . '.png'
	update		3000
	reload		1
}

Widget S800x600_STB1 {
	class		'Image'
	file		ICONS . 'background/800x600/' . file::readline('/tmp/lcd/brightness_standby', 1) . '.png'
	update		5000
	reload		1
}

Widget S800x600_XCAM {
	class		'Image'
	file		ICONS . 'background/800x600/' . file::readline('/tmp/lcd/layout', 1) . '.png'
	update		0
	reload		1
}

# Timer ----------------------------------------------------#

Widget S_TIMER {
	class		'Image'
	file		ICONS . 'mode/timer_' . file::readline('/tmp/lcd/mode_timer', 1) . '.png'
	update		4000
	reload		1
	align		'R'
	scale		300
}

Widget S_VFORMAT {
	class		'Image'
	file		file::readline('/tmp/lcd/resolution', 1) eq '1920x1080' ? SYSICONS . 'res_hd.png' : ( file::readline('/tmp/lcd/resolution', 1) eq '1280x720' ? SYSICONS . 'res_hd.png' : ( file::readline('/tmp/lcd/resolution', 1) eq '1440x1080' ? SYSICONS . 'res_hd.png' : ( file::readline('/tmp/lcd/resolution', 1) eq '3840x2160' ? SYSICONS . 'res_uhd.png' : SYSICONS . 'res_sd.png' )  )
	update		4000
	reload		1
	align		'R'
	scale		150
}

Widget S_ASPECTRATIO {
	class		'Image'
	file		file::readline('/tmp/lcd/aspectratio', 1) eq '16:9' ? SYSICONS . '16_9.png' : SYSICONS . '16_9_gray.png'
	update		4000
	reload		1
	align		'R'
	scale		150
}

Widget S_DOLBY {
	class		'Image'
	file		file::readline('/tmp/lcd/dolbydigital', 1) eq 'yes' ? SYSICONS . 'dd.png' : SYSICONS . 'dd_gray.png'
	update		4000
	reload		1
	align		'R'
	scale		150
}

Widget S_TXT {
	class		'Image'
	file		file::readline('/tmp/lcd/videotext', 1) eq 'yes' ? SYSICONS . 'vtxt.png' : SYSICONS . 'vtxt_gray.png'
	update		4000
	reload		1
	align		'R'
	scale		150
}

Widget S_TUNERTXT {
	class		'Truetype'
	expression	'Tuner:'
	font		file::readline('/tmp/lcd/font', 1)
	fcolor		'58585800'
	#update		3000
	reload		1
	inverted	0
	size		0
	width		105
	height		25
	align		'C'
}

Widget S_TUNER {
	class		'Image'
	file		SYSICONS . 'tuner_0' . file::readline('/tmp/lcd/tuner', 1) . '.png'
	update		4000
	reload		1
	align		'R'
	scale		150
}

Widget S_TUNER1 {
	class		'Image'
	file		SYSICONS . 'tuner_' . file::readline('/tmp/lcd/tuner', 1) .'.png'
	update		4000
	reload		1
	align		'R'
	scale		200
}

Widget S_REC {
	class		'Image'
	file		ICONS . 'mode/rec_' . file::readline('/tmp/lcd/mode_rec', 1) . '.png'
	update		4000
	reload		1
	inverted	0
	align		'R'
	scale		300
}

Widget S_TS {
	class		'Image'
	file		ICONS . 'mode/ts_' . file::readline('/tmp/lcd/mode_tshift', 1) . '.png'
	update		4000
	reload		1
	align		'R'
	scale		300
}

Widget S_ECM {
	class		'Image'
	file		ICONS . 'mode/ecm_' . file::readline('/tmp/lcd/mode_ecm', 1) . '.png'
	update		4000
	reload		1
	align		'R'
	scale		300
}

Widget S_CAMDD {
	class		'Image'
	file		ICONS . 'mode/cam_' . file::readline('/tmp/lcd/mode_camd', 1) . '.png'
	update		4000
	reload		1
	align		'R'
	scale		300
}

Widget S_CI {
	class		'Image'
	file		ICONS . 'mode/ci_' . file::readline('/tmp/lcd/mode_cam', 1) . '.png'
	update		4000
	reload		1
	align		'R'
	scale		300
}

Widget S_CAMD {
	class		'Image'
	file		file::exist(DOSCAM) == 1 ? ICONS . 'mode/camd_doscam.png' : ( file::exist(OSCAM) == 1 ? ICONS . 'mode/camd_oscam.png' :  ( file::exist(OSMOD) == 1 ? ICONS . 'mode/camd_osmod.png' :  ( file::exist(GBOX) == 1 ? ICONS . 'mode/camd_gbox.png' :  ( file::exist(CCCAM) == 1 ? ICONS . 'mode/camd_cccam.png' :  ( file::exist(MGCAMD) == 1 ? ICONS . 'mode/camd_mgcamd.png' :  ( file::exist(NCAM) == 1 ? ICONS . 'mode/camd_ncam.png' :  ICONS . 'mode/camd_off.png' ) ) ) ) ) )
	update		4000
	reload		1
	align		'R'
	scale		300
}

Widget S_LOGO {
	class		'Image'
	file		file::readline('/tmp/lcd/logo', 1)
	update		3000
	reload		1
	center		108
	width		780
	height		108
	#scale		270
}

Widget S_TTF-CHANNEL {
	class		'Truetype'
	expression	file::readline('/tmp/lcd/mode_logo', 1) == 1 ? '' : file::readline('/tmp/lcd/service', 1)
	font		file::readline('/tmp/lcd/font', 1)
	fcolor		'58585800'
	update		3000
	reload		1
	width		780
	height		70
	align		'C'
}

Widget S_START {
	class		'Truetype'
	font		file::readline('/tmp/lcd/font', 1)
	fcolor		'cccccc'
	size		0
	width		180
	height		60
	align		'L'
	expression	file::exist('/tmp/lcd/menu') == 1 | file::readline('/tmp/lcd/event', 1) le '' ? '' : file::readline('/tmp/lcd/start', 1)
	update		3000
	reload		1
}

Widget S_END {
	class		'Truetype'
	font		file::readline('/tmp/lcd/font', 1)
	fcolor		'58585800'
	size		0
	width		180
	height		60
	align		'L'
	expression	file::exist('/tmp/lcd/menu') == 1 | file::readline('/tmp/lcd/event', 2) le '' ? '' : file::readline('/tmp/lcd/end', 1)
	update		3000
	reload		1
}

Widget S_TTF-EPG-NOW {
	class		'Truetype'
	expression	file::exist('/tmp/lcd/menu') == 1 ? file::readline('/tmp/lcd/menu', 1) : (file::readline('/tmp/lcd/event', 1) le '' ? '' : substr(file::readline('/tmp/lcd/event', 1), 0, 25)
	font		file::readline('/tmp/lcd/font', 1)
	fcolor		'CCCCCC00'
	update		3000
	reload		1
	inverted	0
	size		0
	width		600
	height		60
	align		'L'
}

Widget S_TTF-EPG-NEXT {
	class		'Truetype'
	expression	file::exist('/tmp/lcd/menu') == 1 ? file::readline('/tmp/lcd/menu', 1) : (file::readline('/tmp/lcd/event', 2) le '' ? '' : substr(file::readline('/tmp/lcd/event', 2), 0, 25)
	font		file::readline('/tmp/lcd/font', 1)
	fcolor		'58585800'
	update		3000
	reload		1
	inverted	0
	size		0
	width		600
	height		60
	align		'L'
}

Widget S_LEFT1 {
	class		'Image'
	file		file::exist('/tmp/lcd/menu') == 1 ? '' : ICONS . 'left1.png'
	update		4000
	reload		1
}

Widget S_RIGHT1 {
	class		'Image'
	file		file::exist('/tmp/lcd/menu') == 1 ? '' : ICONS . 'right1.png'
	update		4000
	reload		1
}

Widget S_LEFT2 {
	class		'Image'
	file		file::exist('/tmp/lcd/menu') == 1 ? '' : ICONS . 'left2.png'
	update		4000
	reload		1
}

Widget S_RIGHT2 {
	class		'Image'
	file		file::exist('/tmp/lcd/menu') == 1 ? '' : ICONS . 'right2.png'
	update		4000
	reload		1
}

Widget S_DURATION_BJ {
	class		'Truetype'
	expression	file::exist('/tmp/lcd/menu') == 1 ? '' : file::readline('/tmp/lcd/duration', 2)
	font		file::readline('/tmp/lcd/font', 1)
	fcolor		'ff0000'
	update		3000
	reload		1
	width		70
	height		30
	align		'C'
}

Widget S_DURATION_BE {
	class		'Truetype'
	expression	file::exist('/tmp/lcd/menu') == 1 ? '' : file::readline('/tmp/lcd/duration', 3)
	font		file::readline('/tmp/lcd/font', 1)
	fcolor		'cccccc'
	update		3000
	reload		1
	width		70
	height		30
	align		'C'
}

Widget S_DURATION_KPL {
	class		'Truetype'
	expression	file::exist('/tmp/lcd/menu') == 1 ? '' : file::readline('/tmp/lcd/duration', 4)
	font		file::readline('/tmp/lcd/font', 1)
	fcolor		'ffffff'
	update		3000
	reload		1
	width		70
	height		30
	align		'C'
}

Widget S_DURATION_BJ1 {
	class		'Truetype'
	expression	file::exist('/tmp/lcd/menu') == 1 ? '' : file::readline('/tmp/lcd/duration', 2)
	font		file::readline('/tmp/lcd/font', 1)
	fcolor		'ff0000'
	update		3000
	reload		1
	width		90
	height		40
	align		'C'
}

Widget S_DURATION_BE1 {
	class		'Truetype'
	expression	file::exist('/tmp/lcd/menu') == 1 ? '' : file::readline('/tmp/lcd/duration', 3)
	font		file::readline('/tmp/lcd/font', 1)
	fcolor		'cccccc'
	update		3000
	reload		1
	width		90
	height		40
	align		'C'
}

Widget S_DURATION_KPL1 {
	class		'Truetype'
	expression	file::exist('/tmp/lcd/menu') == 1 ? '' : file::readline('/tmp/lcd/duration', 4)
	font		file::readline('/tmp/lcd/font', 1)
	fcolor		'ffffff'
	update		3000
	reload		1
	width		90
	height		40
	align		'C'
}

Widget S_EPGBAR {
	class		'Bar'
	expression	file::exist('/tmp/lcd/menu') == 1 ? '' : file::readline('/tmp/lcd/progress', 1)
	expression2	file::exist('/tmp/lcd/menu') == 1 ? '' : file::readline('/tmp/lcd/progress', 1)
	min		0
	max		100
	length		36
	update		3000
	style		'H'
	direction	'E'
	foreground	'CCCCCC'
}

Widget S_EPGBAR2 {
	class		'Image'
	file		file::exist('/tmp/lcd/menu') == 1 ? '' : PROGRES . file::readline('/tmp/lcd/progress', 1) . '.png'
	update		5000
	reload		1
}

Widget HST {
	class		'Truetype'
	font		file::readline('/tmp/lcd/font', 1)
	fcolor		'585858'
	width		30
	height		20
	align		'L'
	expression	file::readline('/tmp/lcd/brightness', 1)
	update		4000
	reload		1
}

Widget HST_STB {
	class		'Truetype'
	font		file::readline('/tmp/lcd/font', 1)
	fcolor		'585858'
	width		30
	height		20
	align		'L'
	expression	file::readline('/tmp/lcd/brightness_standby', 1)
	update		0
	reload		1
}

Widget RES320x240 {
	class		'Truetype'
	font		file::readline('/tmp/lcd/font', 1)
	fcolor		'585858'
	width		120
	height		20
	align		'R'
	expression	file::readline('/usr/share/lcd/icons/spf.txt', 11)
	update		0
}

Widget RES800x480 {
	class		'Truetype'
	font		file::readline('/tmp/lcd/font', 1)
	fcolor		'585858'
	width		90
	height		20
	align		'R'
	expression	file::readline('/usr/share/lcd/icons/spf.txt', 8)
	update		0
}

Widget RES800x600 {
	class		'Truetype'
	font		file::readline('/tmp/lcd/font', 1)
	fcolor		'585858'
	width		90
	height		20
	align		'R'
	expression	file::readline('/usr/share/lcd/icons/spf.txt', 9)
	update		0
}

Widget RES1024x600 {
	class		'Truetype'
	font		file::readline('/tmp/lcd/font', 1)
	fcolor		'585858'
	width		100
	height		20
	align		'R'
	expression	file::readline('/usr/share/lcd/icons/spf.txt', 10)
	update		0
}

# --- the digital clock ----------------------------------------------------- #

Widget SS_TIME {
	class		'Truetype'
	expression	file::readline . substr(strftime('%H', time()), 0, 1) . file::readline .substr(strftime('%H', time()), 1) . file::readline . ':' . file::readline . substr(strftime('%M', time()), 0, 1) . file::readline . substr(strftime('%M', time()), 1)
	font		file::readline('/tmp/lcd/font', 1)
	fcolor		'ffffff'
	width		350
	height		80
	align		'L'
	update		5000
	reload		1
}

Widget SS_HOUR1_ {
	class		'Truetype'
	expression	file::readline . substr(strftime('%H', time()), 0, 1)
	font		file::readline('/tmp/lcd/font', 1)
	fcolor		'ffffff'
	width		80
	height		100
	align		'L'
	update		10000
	reload		1
}

Widget SS_HOUR_1 {
	class		'Truetype'
	expression	file::readline . substr(strftime('%H', time()), 1)
	font		file::readline('/tmp/lcd/font', 1)
	fcolor		'ffffff'
	width		80
	height		100
	align		'L'
	update		10000
	reload		1
}

Widget SS_DP {
	class		'Truetype'
	expression	file::readline . ':'
	font		file::readline('/tmp/lcd/font', 1)
	fcolor		'ffffff'
	width		40
	height		100
	align		'L'
	update		10000
	reload		1
}

Widget SS_MIN1_ {
	class		'Truetype'
	expression	file::readline . substr(strftime('%M', time()), 0, 1)
	font		file::readline('/tmp/lcd/font', 1)
	fcolor		'ffffff'
	width		80
	height		100
	align		'L'
	update		10000
	reload		1
}

Widget SS_MIN_1 {
	class		'Truetype'
	expression	file::readline . substr(strftime('%M', time()), 1)
	font		file::readline('/tmp/lcd/font', 1)
	fcolor		'ffffff'
	width		80
	height		100
	align		'L'
	update		10000
	reload		1
}

Widget S_HOUR1_ {
	class		'image'
	file		ICONS . 'clock/digital_white_129px/' . substr(strftime('%H', time()), 0, 1) . '.png'
	update		10000
	reload		1
	scale		50
}

Widget S_HOUR_1 {
	class		'image'
	file		ICONS . 'clock/digital_white_129px/' . substr(strftime('%H', time()), 1) . '.png'
	update		10000
	reload		1
	scale		50
}

Widget S_DP {
	class		'Image'
	file		ICONS . 'clock/digital_white_129px/dp.png'
	update		0
	scale		50
}

Widget S_MIN1_ {
	class		'image'
	file		ICONS . 'clock/digital_white_129px/' . substr(strftime('%M', time()), 0, 1) . '.png'
	update		10000
	reload		1
	scale		50
}

Widget S_MIN_1 {
	class		'image'
	file		ICONS . 'clock/digital_white_129px/' . substr(strftime('%M', time()), 1) . '.png'
	update		10000
	reload		1
	scale		50
}

Widget S_STANDBY_HOUR1_ {
	class		'image'
	file		file::exist(FCLOCK) == 1 ? ICONS . 'blank.png' : ICONS . 'clock/digital_white_129px/' . substr(strftime('%H', time()), 0, 1) . '.png'
	update		10000
	reload		1
	scale		130
}

Widget S_STANDBY_HOUR_1 {
	class		'image'
	file		file::exist(FCLOCK) == 1 ? ICONS . 'blank.png' : ICONS . 'clock/digital_white_129px/' . substr(strftime('%H', time()), 1) . '.png'
	update		10000
	reload		1
	scale		130
}

Widget S_STANDBY_DP {
	class		'Image'
	file		file::exist(FCLOCK) == 1 ? ICONS . 'blank.png' : ICONS . 'clock/digital_white_129px/dp.png'
	update		0
	scale		130
}

Widget S_STANDBY_MIN1_ {
	class		'image'
	file		file::exist(FCLOCK) == 1 ? ICONS . 'blank.png' : ICONS . 'clock/digital_white_129px/' . substr(strftime('%M', time()), 0, 1) . '.png'
	update		10000
	reload		1
	scale		130
}

Widget S_STANDBY_MIN_1 {
	class		'image'
	file		file::exist(FCLOCK) == 1 ? ICONS . 'blank.png' : ICONS . 'clock/digital_white_129px/' . substr(strftime('%M', time()), 1) . '.png'
	update		10000
	reload		1
	scale		130
}

# --- Tag Datum ----------------------------------------------------- #

Widget TAGDATUM-TTF {
	class		'truetype'
	expression	(strftime('%u', time()) == 1 ? 'Montag' : (strftime('%u', time()) == 2 ? 'Dienstag' : (strftime('%u', time()) == 3 ? 'Mittwoch' : (strftime('%u', time()) == 4 ? 'Donnerstag' : (strftime('%u', time()) == 5 ? 'Freitag' : (strftime('%u', time()) == 6 ? 'Samstag' : 'Sonntag')))))) . ', ' . strftime('%d.%m.%Y', time())
	font		file::readline('/tmp/lcd/font', 1)
	fcolor		'EEEEEE00'
	align		'C'
	width		800
	height		75
	update		30000
	reload		1
	visible		1
}

Widget TAGDATUM-TTF1 {
	class		'truetype'
	expression	(strftime('%u', time()) == 1 ? 'Montag' : (strftime('%u', time()) == 2 ? 'Dienstag' : (strftime('%u', time()) == 3 ? 'Mittwoch' : (strftime('%u', time()) == 4 ? 'Donnerstag' : (strftime('%u', time()) == 5 ? 'Freitag' : (strftime('%u', time()) == 6 ? 'Samstag' : 'Sonntag')))))) . ', ' . strftime('%d.%m.%Y', time())
	font		file::readline('/tmp/lcd/font', 1)
	fcolor		'CCCCCC00'
	align		'C'
	width		350
	height		40
	update		30000
	reload		1
	visible		1
}

# --------------------------------------------------------------------------- #

Layout Samsung800x600_standard {
	Layer 0 {
		X1.Y1		'S800x600_BG1'
	}
	Layer 1 {
		X17.Y200	'S_TIMER'
		X17.Y325	'S_REC'
		X17.Y415	'S_TS'
		X17.Y475	'S_CI'
		X17.Y560	'S_CAMD'
		X17.Y710	'S_ECM'
		X70.Y10		'S_LOGO'
		X215.Y485	'S_DURATION_BJ1'
		X215.Y575	'S_LEFT1'
		X215.Y595	'S_DURATION_KPL1'
		X215.Y685	'S_RIGHT1'
		X215.Y705	'S_DURATION_BE1'
		X255.Y2		'S_START'
		X255.Y195	'S_TTF-EPG-NOW'
		X345.Y195	'S_TTF-EPG-NEXT'
		X345.Y2		'S_END'
		X460.Y10	'TAGDATUM-TTF1'
		X500.Y10	'SS_TIME'
		X475.Y420	'WEATHERICON_CURRENT'
		X545.Y420	'TEMPERATURE_CURRENT1'
		X495.Y500	'S_WIND'
		X520.Y600	'SS_WIND'
		X475.Y720	'WEATHERICON_LATER'
		X545.Y720	'TEMPERATURE_LATER1'
		X580.Y5		'HST'
		X580.Y700	'RES800x600'
	}
	Layer 2 {
		X70.Y10		'S_TTF-CHANNEL'
		X325.Y0		'S_EPGBAR2'
	}
	Layer 3 {
		X1.Y1		'S800x600_BG'
	}
}

Layout Samsung800x600_radio {
	Layer 0 {
		X1.Y1		'S800x600_BG1'
	}
	Layer 1 {
		X17.Y200	'S_TIMER'
		X17.Y325	'S_REC'
		X17.Y415	'S_TS'
		X17.Y475	'S_CI'
		X17.Y560	'S_CAMD'
		X17.Y710	'S_ECM'
		X70.Y10		'S_LOGO'
		X222.Y435	'S_VFORMAT'
		X222.Y485	'S_ASPECTRATIO'
		X222.Y550	'S_DOLBY'
		X222.Y600	'S_TXT'
		X222.Y650	'S_TUNERTXT'
		X222.Y755	'S_TUNER'
		X260.Y5		'S_START'
		X260.Y205	'S_TTF-EPG-NOW'
		X320.Y205	'S_TTF-EPG-NEXT'
		X320.Y5		'S_END'
		X480.Y310	'ICON_WEATHER1'
		X480.Y240	'WEATHERICON_CURRENT'
		X550.Y240	'TEMPERATURE_CURRENT1'
		X505.Y320	'S_WIND'
		X532.Y410	'SS_WIND'
		X480.Y500	'WEATHERICON_LATER'
		X550.Y500	'TEMPERATURE_LATER1'
		X510.Y10	'S_HOUR1_'
		X510.Y60	'S_HOUR_1'
		X510.Y110	'S_DP'
		X510.Y125	'S_MIN1_'
		X510.Y175	'S_MIN_1'
		X530.Y580	'S_DURATION_BJ'
		X530.Y640	'S_LEFT2'
		X530.Y655	'S_DURATION_KPL'
		X530.Y715	'S_RIGHT2'
		X530.Y730	'S_DURATION_BE'
		X580.Y5		'HST'
		X580.Y700	'RES800x600'
	}
	Layer 2 {
		X70.Y10		'S_TTF-CHANNEL'
		Row11.Col03	'S_EPGBAR'
	}
	Layer 3 {
		X1.Y1		'S800x600_BG'
	}
}

Layout Samsung800x600_xcam {
	Layer 0 {
		X1.Y1		'S800x600_BG1'
	}
	layer 1 {
		row01.col01	'XCAMLINE02'
		row02.col01	'XCAMLINE03'
		row03.col01	'XCAMLINE06'
		row04.col01	'XCAMLINE07'
		row05.col01	'XCAMLINE08'
		row06.col01	'XCAMLINE09'
		row07.col01	'XCAMLINE10'
		row08.col01	'XCAMLINE11'
		row09.col01	'XCAMLINE12'
		row10.col01	'XCAMLINE13'
		row11.col01	'XCAMLINE14'
		row12.col01	'XCAMLINE15'
		row13.col01	'XCAMLINE16'
		row14.col01	'XCAMLINE17'
		row15.col01	'XCAMLINE18'
		row16.col01	'XCAMLINE19'
		row17.col01	'XCAMLINE20'
		row18.col01	'XCAMLINE21'
		row19.col01	'XCAMLINE22'
		row20.col01	'XCAMLINE23'
		row21.col01	'XCAMLINE24'
		row22.col01	'XCAMLINE25'
		row23.col01	'XCAMLINE26'
		row24.col01	'XCAMLINE27'
		row25.col01	'XCAMLINE28'
		X580.Y5		'HST'
		X580.Y700	'RES800x600'
	}
	layer 2 {
		x001.y001	'S800x600_XCAM'
	}
}

Layout Samsung800x600_standby {
	Layer 0 {
		X1.Y1		'S800x600_STB1'
	}
	layer 1 {
		X17.Y200	'S_TIMER'
		X17.Y325	'S_REC'
		X17.Y415	'S_TS'
		X17.Y475	'S_CI'
		X17.Y560	'S_CAMD'
		X17.Y710	'S_ECM'
		X70.Y0		'TAGDATUM-TTF'
		X160.Y120	'S_STANDBY_HOUR1_'
		X160.Y250	'S_STANDBY_HOUR_1'
		X160.Y372	'S_STANDBY_DP'
		X160.Y410	'S_STANDBY_MIN1_'
		X160.Y540	'S_STANDBY_MIN_1'
		X400.Y310	'ICON_WEATHER1'
		X505.Y325	'S_WIND'
		X530.Y415	'SS_WIND'
		X500.Y050	'WEATHERICON_CURRENT'
		X500.Y700	'WEATHERICON_LATER'
		X430.Y250	'WEATHER_CITY1'
		X510.Y140	'TEMPERATURE_CURRENT1'
		X510.Y590	'TEMPERATURE_LATER1'
		X580.Y5		'HST_STB'
		X580.Y700	'RES800x600'
	}
	layer 2 {
		X1.Y1		 'S800x600_STB'
	}
}

# --- General Settings ------------------------------------------------------ #

Variables {
	PROGRES		'/share/lcd/icons/progress/'
	W		'/tmp/lcd/weather_'
	W_ICON		'/share/lcd/icons/wind/'
	ICONS		'/share/lcd/icons/'
	SYSICONS	'/share/tuxbox/neutrino/icons/'
	FWEATHER	'/var/etc/.lcd-weather'
	FCLOCK		'/var/etc/.lcd-clock_a'
	FXCAM		'/var/etc/.lcd-xcam'
	OSCAM		'/var/etc/.oscam'
	DOSCAM		'/var/etc/.doscam'
	OSMOD		'/var/etc/.osmod'
	CCCAM		'/var/etc/.cccam'
	MGCAMD		'/var/etc/.mgcamd'
	GBOX		'/var/etc/.gbox'
	NCAM		'/var/etc/.ncam'

	# color for layout "d-box2" {
		#DBOX2COL	'F44336'	# red
		#DBOX2COL	'4CAF50'	# green
		#DBOX2COL	'3F51B5'	# blue
		DBOX2COL	'F5F5F5'	# white
		#DBOX2COL	'FFEB3B'	# yellow
		#DBOX2COL	'E91E63'	# pink
	# }
}

# --------------------------------------------------------------------------- #

Display	file::readline('/tmp/lcd/layout', 1)

Layout	file::readline('/tmp/lcd/layout', 1)

# --------------------------------------------------------------------------- #
